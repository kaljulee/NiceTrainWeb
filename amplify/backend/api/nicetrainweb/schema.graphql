# scheduled trains have a single station
type Station
@model
@auth(
  rules:[
    {allow: groups, groups: ["ntadmin"], operations: [read, create, update, delete]},
    {allow: public, operations: [read]}
  ]
)
{
  id: ID!
  name: String
  abbrev: String
  scheduledTrains: [ScheduledTrain] @connection(name: "byStation", fields: ["id"])
}

type ScheduledTrain
@model
@key(name: "byStation", fields: ["stationID"])
@auth(
  rules:[
    {allow: groups, groups: ["ntadmin"], operations: [read, create, update, delete]},
    { allow: public, operations: [read] }
  ]
)
{
  id: ID!
  description: String
  train_date: String
  train_time: String
  stationID: ID,
  scheduledActivities: [ScheduledActivity] @connection(name: "byScheduledTrain", fields: ["id"])
}

type ScheduledActivity
@model
@key(name: "byScheduledTrain", fields: ["scheduledTrainID"])
@key(name: "byActivity", fields: ["activityID"])
@key(name: "byFormat", fields: ["formatID"])
@auth(
  rules:[
    {allow: groups, groups: ["ntadmin"], operations: [read, create, update, delete]},
    { allow: public, operations: [read] }
  ]
)
{
  id: ID!
  name: String
  activityID: ID
  scheduledTrainID: ID!
  formatID: ID
  order: Int!
  color: String
  duration: Int
  scheduledTrain: ScheduledTrain! @connection(fields: ["scheduledTrainID"])
}

# Scheduled activities should have a format
type Format
@model
@key(name: "byColor", fields: ["colorID"])
@auth(
  rules:[
    {allow: groups, groups: ["ntadmin"], operations: [read, create, update, delete]},
    { allow: public, operations: [read] }
  ]
)
{
  id: ID!
  name: String!
  colorID: ID
  scheduledActivities: [ScheduledActivity] @connection(name: "byFormat", fields: ["id"])
}

# activities are a ytr and a description
type Activity
@model
@key(name: "byYouTubeResource", fields:["youTubeResourceID"])
@key(name: "byColor", fields: ["colorID"])
@auth(
  rules:[
    {allow: groups, groups: ["ntadmin"], operations: [read, create, update, delete]},
    { allow: public, operations: [read] }
  ]
)
{
  id: ID!
  name: String!
  description: String
  colorID: ID
  scheduledActivities: [ScheduledActivity] @connection(name: "byActivity", fields: ["id"])
  youTubeResourceID: ID
}

# Activities have an optional primary YTR; might have an arbitrary number
# of additional YTRs in the future
type YouTubeResource
@model
@auth(
  rules:[
    {allow: groups, groups: ["ntadmin"], operations: [read, create, update, delete]},
    { allow: public, operations: [read] }
  ]
)
{
  id: ID!
  link: String!
  author: String
  description: String
  activities: [Activity] @connection(name: "byYouTubeResource", fields: ["id"])
}

# message for the long board
# maybe should be split up to accomodate smallest screen
type LongMessage
@model
@auth(
  rules:[
    {allow: groups, groups: ["ntadmin"], operations: [read, create, update, delete]},
    { allow: public, operations: [read] }
  ]
)
{
  id: ID!
  text: String
}

type Color
@model
@auth(
  rules:[
    {allow: groups, groups: ["ntadmin"], operations: [read, create, update, delete]},
    { allow: public, operations: [read] }
  ]
)
{
  id: ID!
  name: String!
  primary: String!
  contrast: String!
}

#type ExtraTable
#@model
#@auth(
#  rules:[
#    {allow: groups, groups: ["ntadmin"], operations: [read, create, update, delete]},
#    { allow: public, operations: [read] }
#  ]
#)
#{
#  id: ID!
#  text: String
#}
